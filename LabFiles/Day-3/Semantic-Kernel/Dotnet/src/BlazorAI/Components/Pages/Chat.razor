@page "/"

@inject HttpClient Http


<PageTitle>Blazor Chat</PageTitle>

<FluentCard Style="display: flex; flex-direction: column">
    <div class="chat-header">
        <FluentHeader Style="border-radius: 5px; width: 100%;">
            Chat
            <FluentSpacer />
            <FluentButton @onclick="ClearChat" Appearance="Appearance.Neutral" IconStart="@(new Icons.Regular.Size24.ChatSparkle())">New Chat</FluentButton>
        </FluentHeader>
    </div>
    <div class="chat-messages">
        @if (chatHistory != null && chatHistory.Any())
        {
            @foreach (var message in chatHistory)
            {
                if ((message.Role.ToString().ToLower() == "tool" && !displayToolMessages) || string.IsNullOrEmpty(message.Content)) continue;
                <div class="@message.Role.ToString().ToLower() message-card">
                    <div class="@message.Role.ToString().ToLower() message-container">
                        @if (message.Role.ToString() == "user")
                        {
                            <FluentIcon Value="@(new Icons.Regular.Size24.PersonChat())" />
                        }
                        else if (message.Role.ToString().ToLower() == "tool" && displayToolMessages)
                        {
                            <FluentIcon Value="@(new Icons.Regular.Size24.Wrench())" />
                        }
                        else
                        {
                            <FluentIcon Value="@(new Icons.Regular.Size24.Bot())" />
                        }
                        <div class="message-content">
                            @if (!string.IsNullOrEmpty(message.Content))
                            {
                                @((MarkupString)Markdig.Markdown.ToHtml(message.Content, pipeline))
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <FluentLabel>No messages yet. Start the conversation!</FluentLabel>
        }
        <FluentProgressRing Visible="@loading" style="width: 42px; height: 82px; position: absolute; bottom: 50%; left: 50%;"></FluentProgressRing>
    </div>
    <div class="chat-input">
        <FluentStack Orientation="Orientation.Horizontal" Width="100%" HorizontalGap="8">
            <FluentTextArea @ref="inputTextArea" Immediate="true" ImmediateDelay="15" @bind-Value="MessageInput"
                            placeholder="Type a message..." Rows="2" Appearance=FluentInputAppearance.Filled
                            Class="chat-input-area" />
            <FluentButton @ref="submitButton" Loading="@loading" @onclick="SendMessage"
                          IconStart="@(new Icons.Regular.Size20.Send())" Appearance="Appearance.Lightweight"
                          Class="send-button">Send</FluentButton>
        </FluentStack>
    </div>
</FluentCard>
<FluentKeyCodeProvider />